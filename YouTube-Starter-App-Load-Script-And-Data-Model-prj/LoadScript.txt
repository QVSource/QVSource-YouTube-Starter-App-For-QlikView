///$tab Change Log
/*

1.6.0 - 21/09/15
----------------
* Updated to use Connector V3.
* Note some data is no longer supported so some tables/columns have been removed.

1.5.3 - 17/06/14
----------------
* Changed the keyword listbox on the Summary tab (which was empty) to show YouTube search term.
* Changed Search_uploaded_qvdate (which no longer existed) to Search_published_qvdate on chart 'Number of uploaded Videos over time'.
* Changed count(Comments_published_qvdate) to count(Comments_id) on chart 'Volume of Comments'.
* Changed Count(Insights_world_locations_Date) to Sum(Insights_world_locations_Views) on object now called 'World Location Views'.
* Dimension for Video Lengths charts changed to '=floor(Search_duration/60)' and changed expression to 'sum(Search_statistics_viewCount)'.
* Updated remaining badges.

1.5.2 - 04/12/12
----------------
* Updated badge.

1.5.1 - 08/07/12
----------------
* Added change log.
* Moved to YouTube Connector V2 (some column nane changes).
* Config now in separate Config.txt file.
* Moved to QVX format.
* Moved script into separate tabs/functions.
* Commented out keywords table for the time being as the value always appears to be empty in the API response (<media:keywords/>)
* Added check that QVSource is running.
* Added appId parameter to calls.
* Added to GitHub.

TODO
----
Some ideas which would improve this application.
* Accumulate results into QVD file(s).
* Download comments using the new Async feature (http://www.qvsource.com/wiki/Synchronous-Asynchronous-And-Batch-Requests-Explained.ashx).
* Add sentimnent analysis.

*/
///$tab Check QVSource
sub CheckQVSourceStatus
 
    set errormode = 0;
     
    QVSourceStatus:
    LOAD Version,
        SubField(Version, '.', 1) as Version_Major,
        SubField(Version, '.', 2) as Version_Minor,
        SubField(Version, '.', 3) as Version_Build,
        SubField(Version, '.', 4) as Version_Revision,
        ServerMode,
        Path,
        Licensed,
        LicenceExpires,
        IsLicensedAsServer
    FROM [http://localhost:5555/QVSource?format=xml] (XmlSimple, Table is [QVSource]);
          
    if(ScriptError <> '') then   
        //
        // Looks like QVSOurce is not even running.
        //
        // Log message here or send email using QVSource Notifier Connector
        //
        trace 'QVSource is not running or not running on the requested port number.';
        exit script;
    endif     
      
    if(peek('Licensed', 0, 'QVSourceStatus') <> 'true') then
        //
        // QVSource is running but not licensed.
        //
        // Log message here or send email using QVSource Notifier Connector
        //
        trace 'QVSource is running but not licensed.';
        exit script;
    endif
 
    if(peek('ServerMode', 0, 'QVSourceStatus') = 'true' and peek('IsLicensedAsServer', 0, 'QVSourceStatus') = 'false') then
        //
        // QVSource is running but not licensed to run in server mode.
        //
        // Log message here or send email using QVSource Notifier Connector
        //
        trace 'QVSource is running but not licensed to run in server mode.';
        exit script;
    endif     
     
    let currentVersionAsInt = (peek('Version_Major', 0, 'QVSourceStatus') * 1000) + (peek('Version_Minor', 0, 'QVSourceStatus') * 100) + (peek('Version_Build', 0, 'QVSourceStatus') * 10) + peek('Version_Revision', 0, 'QVSourceStatus');
 
    // Let's pretend we need QVSource 1.4.2.6 or later....  
    if(currentVersionAsInt < 1461) then
        // Log message here or send email using QVSource Notifier Connector
        trace 'Version too low. Please update QVSource.';
        exit script;
    endif
     
    QVSourceConnectorStatus:
    LOAD Name as ConnectorName,
        Version as ConnectorVersion,
        Licensed as ConnectorLicensed
    FROM [http://localhost:5555/QVSource?format=xml] (XmlSimple, Table is [QVSource/Connectors/Connector]);
     
    //
    // Run other QVSource or connector specific tests here before deciding whether
    // to proceed and load the rest of the application.
    //
     
    set errormode = 1;
 
endsub
 
call CheckQVSourceStatus;
///$tab Config
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='£#,##0.00;-£#,##0.00';
SET TimeFormat='hh:mm:ss';
SET DateFormat='DD/MM/YYYY';
SET TimestampFormat='DD/MM/YYYY hh:mm:ss[.fff]';
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';

set ErrorMode=0;

$(include=config.txt);
///$tab Search
sub runSearches
	
	LET noRows = NoOfRows('YouTubeSearchTerms');
	
	for i=0 to $(noRows)-1 // loop through every row
	
		let youtubeSearchTerm = peek('YouTubeSearchTerm',$(i),'YouTubeSearchTerms');
		
		YouTubeConnector_Search:
		LOAD
			'$(youtubeSearchTerm)' as YouTubeSearchTerm,
			kind as VideoSearch_kind,
			videoId as videoId,
			videoLink as VideoSearch_videoLink,
			publishedAt as VideoSearch_publishedAt,
			timestamp#(left(publishedAt, 10) & ' ' & mid(publishedAt, 12, 8), 'YYYY-MM-DD hh:mm:ss') as VideoSearch_publishedAt_qlik_timestamp,
			date#(left(publishedAt, 10), 'YYYY-MM-DD') as VideoSearch_publishedAt_qlik_date,
			channelId as VideoSearch_channelId,
			channelLink as VideoSearch_channelLink,
			channelTitle as VideoSearch_channelTitle,
			title as VideoSearch_title,
			description as VideoSearch_description,
			thumbnailDefaultUrl as VideoSearch_thumbnailDefaultUrl,
			liveBroadcastContent as VideoSearch_liveBroadcastContent
		FROM
		[http://localhost:5555/QVSource/YouTubeConnectorV3/?table=VideoSearch&query=$(youtubeSearchTerm)&appId=$(vQVSourceAppId)]
		(qvx);
		
	NEXT
	
	LET noRows = NoOfRows('YouTubeConnector_Search'); // get the total number of rows in the table
	   
	for i=0 to $(noRows)-1 // loop through every row
	
		let videoId = peek('videoId',$(i),'YouTubeConnector_Search'); // get the value for "text" field on each row
			
		YouTubeConnector_Statistics:
		LOAD
			'$(videoId)' as videoId,
			kind as VideoStatistics_kind,
			id as VideoStatistics_id,
			title as VideoStatistics_title,
			description as VideoStatistics_description,
			viewCount as VideoStatistics_viewCount,
			likeCount as VideoStatistics_likeCount,
			dislikeCount as VideoStatistics_dislikeCount,
			favoriteCount as VideoStatistics_favoriteCount,
			commentCount as VideoStatistics_commentCount,
			duration as VideoStatistics_duration,
			duration_timespan as VideoStatistics_duration_timespan,
			duration_total_seconds as VideoStatistics_duration_total_seconds,
			dimension as VideoStatistics_dimension,
			definition as VideoStatistics_definition,
			caption as VideoStatistics_caption,
			licensedContent as VideoStatistics_licensedContent
		FROM
		[http://localhost:5555/QVSource/YouTubeConnectorV3/?table=VideoStatistics&videoIds=$(videoId)&includeContentDetails=true&appId=$(vQVSourceAppId)]
		(qvx);

		YouTubeConnector_Comments:
		LOAD
			'$(videoId)' as videoId,
			id as VideoComments_id,
			channelId as VideoComments_channelId,
			videoId as VideoComments_videoId,
			textDisplay as VideoComments_textDisplay,
			textDisplay_urlEncoded as VideoComments_textDisplay_urlEncoded,
			authorDisplayName as VideoComments_authorDisplayName,
			authorProfileImageUrl as VideoComments_authorProfileImageUrl,
			authorChannelUrl as VideoComments_authorChannelUrl,
			authorChannelId as VideoComments_authorChannelId,
			canRate as VideoComments_canRate,
			viewerRating as VideoComments_viewerRating,
			likeCount as VideoComments_likeCount,
			publishedAt as VideoComments_publishedAt,
			timestamp#(left(publishedAt, 10) & ' ' & mid(publishedAt, 12, 8), 'YYYY-MM-DD hh:mm:ss') as VideoComments_publishedAt_qlik_timestamp,
			date#(left(publishedAt, 10), 'YYYY-MM-DD') as VideoComments_publishedAt_qlik_date,
			updatedAt as VideoComments_updatedAt,
			timestamp#(left(updatedAt, 10) & ' ' & mid(updatedAt, 12, 8), 'YYYY-MM-DD hh:mm:ss') as VideoComments_updatedAt_qlik_timestamp,
			date#(left(updatedAt, 10), 'YYYY-MM-DD') as VideoComments_updatedAt_qlik_date,
			canReply as VideoComments_canReply,
			totalReplyCount as VideoComments_totalReplyCount,
			isPublic as VideoComments_isPublic
		FROM
		[http://localhost:5555/QVSource/YouTubeConnectorV3/?table=VideoComments&videoId=$(videoId)&appId=$(vQVSourceAppId)]
		(qvx);
	
	Next

endsub
///$tab Main
if($(vRunSearches) = 1) then
	call runSearches;
endif
